{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2018-03-01-hybrid",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs -both Web Server and DB Server"
      },
      "defaultValue": "vmadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
      },
      "defaultValue": "[concat('Subscription#',substring(resourcegroup().id,15,36))]"
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        3,
        4,
        5
      ],
      "metadata": {
        "description": "Number of Web Server VMs to deploy"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "webservers",
      "metadata": {
        "description": "Web Server VM name prefix"
      }
    },
    "vmName2Prefix": {
      "type": "string",
      "defaultValue": "dbserver",
      "metadata": {
        "description": "DB Server VM name prefix"
      }
    },
    "vmSize": {
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "This is the size of your VM. Add other SKUs to this list that are relevant to your deployment"
      },
      "type": "string"
    },
    "vmSizeDb": {
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4"
      ],
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "This is the size of your VM. Add other SKUs to this list that are relevant to your deployment"
      },
      "type": "string"
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": "vmdns",
      "metadata": {
        "description": "dns name prefix for the Public IP Address"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "Maps to the publisher in the Azure VMs Gallery."
      }
    },
    "osImageOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Offer name corresponding to this Publisher."
      }
    },
    "osImageSKU": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "allowedValues": [
        "16.04-LTS"
      ],
      "metadata": {
        "description": "The Linux version for the VM. This will pick a fully patched image of this given Ubuntu"
      }
    },
    "storageAccountKind": {
      "type": "string",
      "defaultValue": "StorageV2",
      "allowedValues": [
        "StorageV2",
        "Storage",
        "BlobStorage"
      ],
      "metadata": {
        "description": "Storage Account kind. Storage V2, has some of the latest features"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the support log storage account"
      }
    },

    "loadBalancedAppPort0": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Input endpoint1 for the application to use. Replace it with what your application uses"
      }
    }
  },
  "variables": {
    "availabilitySetName": "[toLower(concat('aSet-', resourceGroup().name))]",
    "DbavailabilitySetName": "[toLower(concat('aSetDb-', resourceGroup().name))]",
    "vmSize": "[parameters('vmSize')]",
    "vmSizeDb": "[parameters('vmSizeDb')]",
    "dnsPrefix": "[parameters('dnsPrefix')]",
    "dns2Prefix": "[concat(parameters('dnsPrefix'),'-db')]",
    "osImageVersion": "latest",

    "addressPrefix": "10.0.0.0/16",
    "virtualNetworkName": "[tolower(concat('vNet-',resourceGroup().name))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",

    "NICPrefix": "vnic-",
    "subnetPrefix": "10.0.0.0/24",
    "subnetPrefix2": "10.0.1.0/24",
    "subnetName": "dmz-subnet",
    "subnetName2": "secure-subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnetName2'))]",
    "storageName": "[concat('sa', uniquestring(resourceGroup().id))]",

    "publicLBName": "[tolower(concat('external-lb-', resourceGroup().name))]",
    "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "lbFE": "[tolower(concat('external-lb-fe-',resourceGroup().name))]",
    "publiclbFEConfigID": "[concat(variables('publiclbID'),'/frontendIPConfigurations/',variables('lbFE'))]",

    "publicIPAddressName": "[tolower(concat('public-ip',resourceGroup().name))]",
    "publicIPAddress2Name": "[tolower(concat('public-ip2',resourceGroup().name))]",
    "rdpPort": 22,
    "nsgName": "[tolower(concat('vmnsg',resourceGroup().name))]",
    "nsg2Name": "[tolower(concat('dbvmnsg',resourceGroup().name))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsg2ID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg2Name'))]",
    "vmContainerName": "vhds",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers',variables('publiclbName'))]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBackend')]",
    "storageApiVersion": "2018-07-01"
  },
  "resources": [
    {
      "name": "pid-AERASDAIOOQESDANM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "name": "[variables('storageName')]",
      "location": "[resourceGroup().location]",
      "kind": "[parameters('storageAccountKind')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "dependsOn": [
        "[variables('publiclbName')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-11-01",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowInternet",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [ "80", "22" ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2018-10-01",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "5"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsPrefix')]"
        }
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          },
          {
            "name": "[variables('subnetName2')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix2')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[variables('nsgID')]"
      ]
    },
    {
      "name": "[variables('publiclbName')]",
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('publicIPAddressName')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBackend"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "AppPortLBRule1",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('loadBalancedAppPort0')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('publiclbFEConfigID')]"
              },
              "frontendPort": "[parameters('loadBalancedAppPort0')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "AppPortProbe1",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('loadBalancedAppPort0')]",
              "protocol": "Tcp"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('publicLBName'), '/ssh-VM', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('publiclbName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('publiclbFEConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2200)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('publicLBName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('publicLBName'), '/inboundNatRules/', 'ssh-VM', copyIndex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('publiclbID'), '/backendAddressPools/LoadBalancerBackend')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('publiclbID'), '/inboundNatRules/ssh-VM', copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-04-01",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex()))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('osImagePublisher')]",
            "offer": "[parameters('osImageOffer')]",
            "sku": "[parameters('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "diskSizeGB": 512,
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob)]"
          }
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmNamePrefix'),copyIndex(),'/newuserscript')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'),copyIndex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/apache2-on-ubuntu-vm/install_apache.sh"
              ],
              "commandToExecute": "sh install_apache.sh"
            }
          }
        }
      ]
    },
    
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPAddress2Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dns2Prefix')]"
        }
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ]
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2018-10-01",
      "name": "[variables('DbavailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "5"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-04-01",
      "name": "[parameters('vmName2Prefix')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmName2Prefix')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('DbavailabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('DbavailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSizeDb')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName2Prefix'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('osImagePublisher')]",
            "offer": "[parameters('osImageOffer')]",
            "sku": "[parameters('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "diskSizeGB": 1024,
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmName2Prefix')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-11-01",
      "name": "[variables('nsg2Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {

            "name": "AllowInternet",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [ "22" ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('NICPrefix'), parameters('vmName2Prefix'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddress2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddress2Name'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
        }
      }
    }
  ],
  "outputs": {}
}